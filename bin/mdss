#!/usr/bin/env ruby
# To parse command line args
require 'optparse'
# MDSS code
require 'mdss'

=begin rdoc
Wrapper class around the CLI functionality of MDSS.
=end
class MDSSCLI
=begin rdoc
call-seq:
    MDSSCLI.start => nil

Start the MDSS CLI. The arguments provided are parsed using the OptionParser class.
=end
    def self.start
        # Define our option parameters. We need the name of the site, or if we are
        # launching the site to a server
        options = {:name => nil, :launch => false}
        # Some helper functions
        mdss_helper = MDSS.get_extra

        # Define our various options
        parser = OptionParser.new do |opts|
            opts.banner = "Usage: mdss [options]"

            # Initialize a new site
            opts.on("-i", "--init <NAME>", "Create a new simple static site with GFM") do |name|
                options[:name] = name
            end

            # Launching an existing site to a server
            opts.on("-l", "--launch", "Compile and upload to the big wide world") do
                options[:launch] = true
                exit
            end

            # Display the help menu
            opts.on("-h", "--help", "Display help menu") do
                puts opts
                exit
            end
        end

        # Parse the arguments, catching any errors
        begin parser.parse!
        rescue OptionParser::MissingArgument => e
            mdss_helper.puts_err("Missing site name")
        end

        # Looks like we're launching to a server
        if options[:launch]
            mdss_helper.puts_err("Unsupported behavior")
        # Looks like we're making a new site
        else
            # Pass the site name to the initalizer function
            MDSS.mdss_init options[:name]
        end
    end
end

# Start the CLI
MDSSCLI.start
